# -------- Inputs (unchanged) --------
input {
  udp {                # raw syslog from your demo script
    port => 5514
    type => "syslog"
  }
  beats {              # Filebeat (TCP)
    port => 5044
  }
}

# -------- Filters --------
filter {
  # Extract src_ip from demo "Failed password ..." lines
  grok {
    match => { "message" => "Failed password for .* from %{IP:src_ip}" }
    tag_on_failure => []
  }

  # Tag failed SSH attempts so we only aggregate those
  if "Failed password" in [message] {
    mutate { add_tag => ["failed_ssh"] }
  }

  # Aggregate failed SSH attempts by src_ip in a 60s window.
  # When the window times out, emit one summary event with count.
  if "failed_ssh" in [tags] and [src_ip] {
    aggregate {
      task_id => "%{src_ip}"
      code => "
        map['count'] ||= 0
        map['count'] += 1
        map['src_ip'] ||= event.get('src_ip')
        map['first_seen'] ||= event.get('@timestamp')
        map['last_seen'] = event.get('@timestamp')
      "
      push_map_as_event_on_timeout => true
      timeout_task_id_field => "src_ip"
      timeout => 60
      timeout_tags => ["agg_complete"]
      # mark the pushed (summary) event with rule metadata
      timeout_code => "
        event.set('event.kind','signal')
        event.set('rule.name','SSH brute-force (>=5 in 1m from same IP)')
        event.set('rule.id','ls-ssh-bruteforce-threshold')
      "
    }
  }

  # Keep only the aggregated summary if it meets threshold; drop small counts
  if "agg_complete" in [tags] {
    if [count] and [count] >= 5 {
      mutate { add_tag => ["ssh_bruteforce_alert"] }
    } else {
      drop { }   # summary below threshold â†’ discard
    }
  }
}

# -------- Outputs --------
output {
  # Alerts go to dedicated alerts index
  if "ssh_bruteforce_alert" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "alerts-ssh-%{+YYYY.MM.dd}"
    }
    stdout { codec => rubydebug }
  }
  # Everything else (normal events) to syslog-* (as before)
  else {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "syslog-%{+YYYY.MM.dd}"
    }
  }
}