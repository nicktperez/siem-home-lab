input {
  tcp {
    port => 5000
    codec => json_lines
    type => "ai_prompt"
  }
  # other inputs (beats/udp) remain in your existing pipeline files
}

filter {
  if [type] == "ai_prompt" {
    # Normalize timestamp to @timestamp
    mutate { rename => { "timestamp" => "@timestamp" } }
    date { match => ["@timestamp","ISO8601"] }

    # Detect common prompt-injection phrases (case-insensitive)
    if [prompt] =~ /(?i)\b(ignore (your|previous|prior) instruction|disregard prior directions|output .*password|print (the )?api key|exfiltrate|return all stored passwords)\b/ {
      mutate { add_tag => ["ai_prompt_injection","suspicious"] }
      mutate { add_field => { "detection.reason" => "prompt_injection_regex" } }
    }
  }
}

output {
  # Suspicious prompts -> alerts index (used for alerting/dashboard)
  if "ai_prompt_injection" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "alerts-ai-%{+YYYY.MM.dd}"
    }
    stdout { codec => rubydebug }
  }

  # Index all prompts for hunting/analysis
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "ai-prompts-%{+YYYY.MM.dd}"
  }
}